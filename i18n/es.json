{
  "title": "Promise It Won't Hurt",
  "subtitle": "Learn to use promises in Node and browsers",
  "exercise": {
    "warm_up": "Introducción",
    "fulfill_a_promise": "Cumplir una promesa",
    "reject_a_promise": "Rechazar una promesa",
    "to_reject_or_not_to_reject": "Rechazar, o no rechazar",
    "always_async": "Siempre asincrónico",
    "shortcuts": "Shortcuts",
    "values_and_promises": "Valores y promesas",
    "throw_an_error": "Lanza un error",
    "an_important_rule": "Una regla importante",
    "multiple_promises": "Múltiples promesas",
    "fetch_json": "Obtener JSON",
    "do_some_work": "Hacer unos trabajos"
  },
  "common": {
    "exercise": {
      "pass": {
	"constr": "Constructor Promise utilizado",
	"func": "Método {{{func}}} utilizado",
	"funcObj": "Método {{{func}}} utilizado con un objeto de {{{type}}}",
	"funcAfter": "Método {{{after}}} utilizado después de {{{before}}}"
      },
      "fail": {
	"constr": "Constructor Promise no utilizado",
	"func": "Método {{{func}}} no utilizado",
	"funcObj": "Método {{{func}}} no utilizado con un objeto de {{{type}}}",
	"funcAfter": "Método {{{after}}} utilizado antes de {{{before}}}"
      }
    }
  },
  "exercises": {
    "reject_a_promise": {
      "fail": {
	"successHandler": "Almost there! You added a success handler rather than a rejection handler to the promise in the `.then` call. Review the instructions, especially the Hints section.",
	"noHandlers": "You called `.then` without any callbacks. Review the last lesson on how to use `.then` if you need to."
      }
    },
    "to_reject_or_not_to_reject": {
      "pass": {
	"thenBoth": "Used then method with both callbacks specified"
      },
      "fail": {
	"thenBoth": "You didn’t use then method with both callbacks specified"
      }
    },
    "shortcuts": {
      "fail": {
	"funcOr": "No se utilizan ni {{{func1}}} ni {{{func2}}}"
      }
    }
  }
}
